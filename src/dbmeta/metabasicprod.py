""" Base Class For MetaData Basic Creation """__all__ = ["MetaBasicProducer"]from pandas import DataFrame, Seriesclass MetaBasicProducer:    def __repr__(self):        return f"MetaBasicProducer(metatype={self.metatype})"            def __init__(self, **kwargs):        self.verbose = kwargs.get('verbose', False)        self.metatype = "Basic"        self.columns = ["name", "url"]    ###########################################################################    # Basic MetaData    ###########################################################################    def getMetaData(self, modValData: DataFrame) -> 'DataFrame':        assert isinstance(modValData, DataFrame), f"ModValData [{type(modValData)}] is not a DataFrame object"        for column in self.columns:            assert column in modValData.columns, f"ModValData does not have column [{column}]: {modValData.columns}"        availableMedia = "Media" in modValData.columns        basicData = modValData[self.columns]                def getMediaShape(media):            retval = media.shape[0] if isinstance(media, DataFrame) else 0            return retval        if availableMedia is True:            numAlbums = modValData["Media"].map(getMediaShape)        else:            numAlbums = Series(0, index=modValData.index)        numAlbums.name = "NumAlbums"        basicData = basicData.join(numAlbums)        retval = basicData.rename(columns={"name": "ArtistName", "url": "URL"})        return retval