""" Media Summary Joiner """__all__ = ["MediaSummaryJoiner"]from dbmaster import MasterMetasfrom dbbase import MusicDBRootDataIOfrom utils import Timestatfrom pandas import DataFrame, Seriesclass MediaSummaryJoiner:    def __repr__(self):        return f"MediaSummaryJoiner(db={self.rdio.db})"    def __init__(self, rdio: MusicDBRootDataIO, **kwargs):        self.verbose = kwargs.get('verbose', False)        self.test = kwargs.get('test', False)        self.rdio = rdio                  ###########################################################################    # Join With Existing Summary Data    ###########################################################################    def joinSummaryData(self, summaryType: str, summaryData: DataFrame, ts: Timestat, saveit=True):        assert isinstance(summaryType, str), f"summaryType [{summaryType}] is not a str"        assert summaryType in MasterMetas().getSummaryTypes().keys(), f"SummaryType [{summaryType}] is not valid"        assert isinstance(summaryData, (DataFrame, Series)), f"summaryData [{type(summaryData)}] is not a DataFrame/Series"        summaryKey = f"Summary{summaryType}"        existingFile = self.rdio.getFilename(summaryKey)        createData = summaryType in ["Dates"] or not existingFile.exists()                if createData is True:            basicData = self.rdio.getData("SummaryNumAlbums")            cmt = f"  Joining [{summaryData.shape[0]}] {summaryType} Data With All [{basicData.shape[0]}] Summary IDs  ... "            ts.comment(cmt=cmt)            summaryData = DataFrame(basicData).join(summaryData).drop(["NumAlbums"], axis=1)            del basicData        else:            colNames = summaryData.columns if isinstance(summaryData, DataFrame) else [summaryData.name]            existingData = self.rdio.getData(summaryKey)            colNames = [colName for colName in colNames if colName in existingData.columns]            existingData = existingData.drop(colNames, axis=1) if len(colNames) > 0 else existingData            cmt = f"  Joining [{summaryData.shape[0]}] {summaryType} Data With Existing [{existingData.shape[0]}] Summary IDs  ... "            ts.comment(cmt=cmt)            summaryData = existingData.join(summaryData)                    if self.verbose is True:            print(f"  ==> Created {summaryData.shape[0]} Artist ID => {summaryType} Summary Data")        if self.test is True:            print("  ==> Only testing. Will not save.")        else:            if saveit is True:                print(f"  ==> Saving {summaryKey} ... ", end="")                self.rdio.saveData(summaryKey, data=summaryData)                print("âœ“")            else:                return summaryData